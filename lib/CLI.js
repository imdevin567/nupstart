'use strict';

var fs 			= require('fs');
var Nupstart 	= require('./Nupstart');
var path		= require('path');

var CLI = module.exports = {
	path		: '/etc/nupstart',
	processfile	: '/etc/nupstart/processfile'
};

CLI.setup = function() {
	fs.exists(CLI.path, function(exists) {
		if (!exists) fs.mkdirSync(CLI.path);
	});

	fs.exists(CLI.processfile, function(exists) {
		if (!exists) fs.writeFileSync(CLI.processfile, '# Generated by Nupstart');
	});
};

CLI.start = function(script) {
	var config = JSON.parse(fs.readFileSync(CLI.processfile));

	if (script != 'all') {
		Nupstart.launch(script, config[script]);
	} else {
		Object.keys(config).forEach(function(key) {
			Nupstart.launch(key, config[key]);
		});
	}
};

CLI.stop = function(script) {
	var config = JSON.parse(fs.readFileSync(CLI.processfile));

	if (script != 'all') {
		Nupstart.kill(script);
	} else {
		Object.keys(config).forEach(function(key) {
			Nupstart.kill(key);
		});
	}
};

CLI.web = function() {
	var web_config = {
		'script' 	: path.resolve(path.dirname(module.filename), 'web/app.js'),
		'logfile' 	: path.resolve(path.dirname(require.main.filename), 'web.log')
	};

	Nupstart.launch('nupstart-web', web_config);
};

CLI.clean = function() {
	var config = JSON.parse(fs.readFileSync(CLI.processfile));

	Object.keys(config).forEach(function(key) {
		Nupstart.kill(key);
		Nupstart.clean(key);
	});
};

CLI.stats = function(script) {
	var config = JSON.parse(fs.readFileSync(CLI.processfile));
	var statsJSON = '';

	if (typeof script != 'undefined') {
		statsJSON = Nupstart.stats(script);
	} else {
		Object.keys(config).forEach(function(key) {
			Nupstart.stats(key);
		});
	}
};
